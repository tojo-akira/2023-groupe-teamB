/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-06-27 06:52:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.AdminView;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.*;

public final class StaffINF_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("bean");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      dto.StaffDTO stdto = null;
      stdto = (dto.StaffDTO) _jspx_page_context.getAttribute("stdto", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (stdto == null){
        stdto = new dto.StaffDTO();
        _jspx_page_context.setAttribute("stdto", stdto, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\n');
      out.write('\n');
String name = (String) session.getAttribute("name");
      out.write('\n');

Integer staff_lv = (Integer) session.getAttribute("staff_lv");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/view/Css/Style.css\">\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<header>\n");
      out.write("		<div class=\"hamburger-menu\">\n");
      out.write("			<input type=\"checkbox\" id=\"menu-btn-check\"> <label\n");
      out.write("				for=\"menu-btn-check\" class=\"menu-btn\"><span></span></label>\n");
      out.write("			<div class=\"menu-content\">\n");
      out.write("				<ul>\n");
      out.write("					<li><p>");
      out.print(name);
      out.write("さん。\n");
      out.write("						</p></li>\n");
      out.write("					<li><a\n");
      out.write("						href=\"");
      out.print(request.getContextPath());
      out.write("/view/LoginView/Menu.jsp\">メニュー</a></li>\n");
      out.write("					<li><a\n");
      out.write("						href=\"");
      out.print(request.getContextPath());
      out.write("/view/GeneralView/MyPage.jsp\">マイページ</a></li>\n");
      out.write("					");

					if (staff_lv == 1) {
					
      out.write("\n");
      out.write("					<li><a\n");
      out.write("						href=\"");
      out.print(request.getContextPath());
      out.write("/view/AdminView/AdminMenu.jsp\">管理者ページ</a></li>\n");
      out.write("					");

					}
					
      out.write("\n");
      out.write("					<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/LogoutServlet\">ログアウト</a></li>\n");
      out.write("				</ul>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</header>\n");
      out.write("	<br>\n");
      out.write("	<br>\n");
      out.write("	<br>\n");
      out.write("	<div style=\"text-align: center;\">\n");
      out.write("		<h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.nama}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("さんの情報</h1>\n");
      out.write("		<br>\n");
      out.write("		<table border=\"1\">\n");
      out.write("			<tr>\n");
      out.write("				<th width=\"100\">社員番号</th>\n");
      out.write("				<th width=\"150\">名前</th>\n");
      out.write("				<th width=\"150\">スキル名</th>\n");
      out.write("				<th width=\"110\">スキルレベル</th>\n");
      out.write("				<th width=\"480\">スキルアピール文</th>\n");
      out.write("				<th width=\"480\">自己紹介</th>\n");
      out.write("			</tr>\n");
      out.write("			");

			for (int i = 0; i < stdto.size(); i++) {
				StaffBean sb = stdto.get(i);
			
      out.write("\n");
      out.write("			<tr>\n");
      out.write("				<td align=\"center\">");
      out.print(sb.getId());
      out.write("</td>\n");
      out.write("				<td align=\"center\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.nama}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("				<td align=\"center\">");
      out.print(sb.getSkill_name());
      out.write("</td>\n");
      out.write("				<td align=\"center\">");
      out.print(sb.getSkill_lv());
      out.write("</td>\n");
      out.write("				<td align=\"center\">");
      out.print(sb.getSkill_appeal());
      out.write("</td>\n");
      out.write("				<td align=\"center\">");
      out.print(sb.getMyself());
      out.write("</td>\n");
      out.write("\n");
      out.write("			</tr>\n");
      out.write("			");

			}
			
      out.write("\n");
      out.write("		</table>\n");
      out.write("		<br>\n");
      out.write("		<form method=get name=form1\n");
      out.write("			action=\"");
      out.print(request.getContextPath());
      out.write("/UpdateServlet\">\n");
      out.write("			<input type=\"hidden\" name=\"neme\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.nama}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("			<input type=\"submit\" value=\"権限レベルの更新\">\n");
      out.write("		</form>\n");
      out.write("	</div>\n");
      out.write("	<br />\n");
      out.write("	<p style=\"text-align: center;\">-----------------------------------------------------------------------------------------</p>\n");
      out.write("	<br />\n");
      out.write("	<div align=\"center\">\n");
      out.write("		<form method=\"get\" name=\"form1\"\n");
      out.write("			action=\"");
      out.print(request.getContextPath());
      out.write("/ManagerServlet\">\n");
      out.write("			<input type=\"submit\" value=\"社員一覧\">\n");
      out.write("		</form>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
